#capstone Project
getwd()
setwd("c:\\capstone Dataset")
tel<-read.csv("telecomfinal.csv", stringsAsFactors = T)

#To remove scientific notion like exponential
options(scipen=999)

#Data manipulation
library(dplyr)


names(tel)
#data type
str(tel)
summary(tel)

#Data Quality Report

#Extracting variable names
variables<-names(tel)

#Getting variable names in a separate Dataset
tel1<-as.data.frame(variables)
rm(variables)

#Adding Data Type of each variable in a new column
tell$DataType<-sapply(tel,class)
tell

#adding number of Rows for each variable in a separate column32 tell$No.ofobs.<- nrow(tel)
tell$No.ofobs.<- nrow(tel)

#getting no of unique values in each columns and adding them using unique
for(i in 1:ncol(tel))
{
tellSuniquevalues[i] <-1ength(unique(tel[4]))
}

#find the observations available and percent by using !is.na
tel1$obswithval<-colsums(!is.na(tel))
tel1$obsvalpercnt<-round(colmeans(!is.na(tel)),4)

#find the missing observations and percent by using is.na
tel1$missingval<-colsums(is.na(tel))
tel1$misngvalpercnt<-round(colmeans(is.na(tel)),4)

str(tell)

#minimum, maximum, mean, quantiles values for each variable - to understand about each variable
for(i in 1 :ncol(tel))
{
tel1$minimum[i]<-round(ifelse(class(tel[4])=="integer"I   class(tel[j])=="numeric",min(tel[,i],na.rm = T),0),2)
tel1$maximum[i]<-round(ifelse(class(tel[4])=="integer"I   class(tel[j])=="numeric",max(tel[,i],na.rm = T),0),2)
tel1$mean[i]    <-round(ifelse(class(tel[4])=="integer"I  class(tel[j])=="numeric",mean(tel[,i],na.rm =T),0),2)
tel1$fifthPercentil[i]        <-round(ifelse(class(terni  ])=="integer"|class(tel [4])=="numeric",quantile(tel[,i] ,p=0.05, na.rm = T),0),2)
tel1$tenthpercentil[i]        <-round(ifelse(class(terni  ])=="integer"|class(tel [4])=="numeric",quantile(tel[,i] ,p=0.10, na.rm = T),0),2)
tel1$twentyfivepercentil[i] <-round(ifelse(class(terni    ])=="integer"|class(tel [4])=="numeric",quantile(tel[,i] ,p=0.25, na.rm = T),0),2)
tel1$fiftythpercentil[i] <-round(ifelse(class(terni       ])=="integer"|class(tel [4])=="numeric",quantile(tel[,i] ,p=0.50, na.rm = T),0),2)
tel1$seventyfivepercentil[i]l<-round(ifelse(class(terni   ])=="integer"|class(tel [4])=="numeric",quantile(tel[,i] ,p=0.75, na.rm = T),0),2)
tel1$ninetythpercentil[i] <-round(ifelse(class(terni      ])=="integer"|class(tel [4])=="numeric",quantile(tel[,i] ,p=0.90, na.rm = T),0),2)
tel1$ninetyfivepercentil[i] <-round(ifelse(class(terni    ])=="integer"|class(tel [4])=="numeric",quantile(tel[,i] ,p=0.95, na.rm = T),0),2)

}

str(tell)
#Dataquality report is finished
write.csv(tel1,"Data_Quality_Report.csv",row.names = T)

#missing value treatment of var
#missing value calculation for retdays
summary(tel$retdays)
sort(unique(tel$Sretdays),na.last = F)
tel$retdaysnew-ifelse(is.na(tel$retdays)==TRUE,0,1)
#customers requested to leave are 1 else 0
str(tel$retdaysnew)
summary(tel$retdaysnew)

#removing variables with missing values more than 15%
telnew-ter[colmeans(is.na(tel))<=0.15]


#variable drp_blk_mean is removed as its formed by addition of other variables
#drp_blk_mean = BLCK_VCE_MEAN + DROP_DAT_MEAN+DROP_VCE_MEAN
names(telnew)
telnew-telnew[,-50]

#Data Exploration(continous and categorical variabe)

#variable Profiling
names(telnew)
str(telnew)

#continous variables
#mutate - creates new variables
#mou_mean
summary(telnew$mou_mean)
telnew%>%mutate(dec=ntile(mou_mean,n=10))%>%count(churn,dec)%>%filter(churn==1)->datl
dat1$N<-unclass(telnew%>%Mutate(dec=ntile(mou_mean,n=10))%>%count(dec)%>%unname())[[2]]
dat1$churn_perc<-round(dat1$n/dat1$N,2)
datl$GreaterThan<-unclass(telnew%>%Mutate(dec=ntile(mou_mean,n=10))%>%group_by(dec)%>%$ummarise(min(mou_mean)))[[2]]
datl$LessThan<-unclass(telnew%>%Mutate(dec=ntile(mou_mean,n=10))%>%group_by(dec)%>%$ummarise(max(mou_mean)))[[2]]
dat1$varname<-rep("mou_mean",nrow(dat1))

#totmrc_mean
summary(telnew$totmrc_mean)
telnew%>%mutate(dec=ntile(totmrc_mean,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat2
dat2$N<-unclass(telnew%>%mutate(dec=ntile(totmrc_mean,n -10))%>%count(dec)%>%unname())[[2]]
dat2$churn_perc<-dat2$n/dat2$N
dat2$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(totmrc_mean,n=10))%>%group_by(dec)%>%summarise(min(totmrc_mean)))[[2]]
dat2$LessThan<-unclass(telnew%>%mutate(dec=ntile(totmrc_mean,n=10))%>%group_by(dec)%>%summarise(max(totmrc_mean)))[[2]]
dat2$varname<-rep("totmrc_mean",nrow(dat2))

#rev_Range
summary(telnew$rev_Range)
telnew%>%mutate(dec=ntile(rev_Range,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat3
dat3$N<-unclass(telnew%>%mutate(dec=ntile(rev_Range,n=10))%>%count(dec)%>%unname())[[2]]
dat3$churn_perc<-dat3$n/dat3$N
dat3$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(rev_Range,n=10))%>%group_by(dec)%>%summarise(min(rev_Range)))[[2]]
dat3$LessThan<-unclass(telnew%>%mutate(dec=ntile(rev_Range,n=10))%>%group_by(dec)%>%summarise(max(rev_Range)))[[2]]
dat3$varname<-rep("rev_Range",nrow(dat3))

#mou_Range
summary(telnew$mou_Range)
telnew%>%mutate(dec=ntile(mou_Range,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat4
dat4$N<-unclass(telnew%>%mutate(dec=ntile(mou_Range,n=10))%>%count(dec)%>%unname())[[2]]
dat4$churn_perc<-dat4$n/dat4$N
dat4$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(mou_Range,n=10))%>%group_by(dec)%>%summarise(min(mou_Range)))[[2]]
dat4$LessThan<-unclass(telnew%>%mutate(dec=ntile(mou_Range,n=10))%>%group_by(dec)%>%summarise(max(mou_Range)))[[2]]
dat4$varname<-rep("mou_Range",nrow(dat4))

#change_mou
summary(telnew$change_mou)
telnew%>%mutate(dec=ntile(change_mou,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat5
dat5$N<-unclass(telnew%>%mutate(dec=ntile(change_mou,n=10))%>%count(dec)%>%unname())[[2]]
dat5$churn_perc<-dat5$n/dat5$N
dat5$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(change_mou,n=10))%>%group_by(dec)%>%summarise(min(change_mou)))[[2]]
dat5$LessThan<-unclass(telnew%>%mutate(dec=ntile(change_mou,n=10))%>%group_by(dec)%>%summarise(max(change_mou)))[[2]]
dat5$varname<-rep("change_mou",nrow(dat5))

#drop_blk_mean
summary(telnew$drop_blk_mean)
telnew%>%mutate(dec=ntile(drop_blk_mean,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat6
dat6$N<-unclass(telnew%>%mutate(dec=ntile(drop_blk_mean,n=10))%>%count(dec)%>%unname())[[2]]
dat6$churn_perc<-dat6$n/dat6$N
dat6$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(drop_blk_mean,n=10))%>%group_by(dec)%>%summarise(min(drop_blk_mean)))[[2]]
dat6$LessThan<-unclass(telnew%>%mutate(dec=ntile(drop_blk_mean,n=10))%>%group_by(dec)%>%summarise(max(drop_blk_mean)))[[2]]
dat6$varname<-rep("drop_blk_mean",nrow(dat6))

#drop_vce_Range
summary(telnew$drop_vce_Range)
telnew%>%mutate(dec=ntile(drop_vce_Range,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat7
dat7$N<-unclass(telnew%>%mutate(dec=ntile(drop_vce_Range,n=10))%>%count(dec)%>%unname())[[2]]
dat7$churn_perc<-dat7$n/dat7$N
dat7$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(drop_vce_Range,n=10))%>%group_by(dec)%>%summarise(min(drop_vce_Range)))[[2]]
dat7$LessThan<-unclass(telnew%>%mutate(dec=ntile(drop_vce_Range,n=10))%>%group_by(dec)%>%summarise(max(drop_vce_Range)))[[2]]
dat7$varname<-rep("drop_vce_Range",nrow(dat7))

#owylis_vce_Range
summary(telnew$owylis_vce_Range)
telnew%>%mutate(dec=ntile(owylis_vce_Range,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat8
dat8$N<-unclass(telnew%>%mutate(dec=ntile(owylis_vce_Range,n=10))%>%count(dec)%>%unname())[[2]]
dat8$churn_perc<-dat8$n/dat8$N
dat8$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(owylis_vce_Range,n=10))%>%group_by(dec)%>%summarise(min(owylis_vce_Range)))[[2]]
dat8$LessThan<-unclass(telnew%>%mutate(dec=ntile(owylis_vce_Range,n=10))%>%group_by(dec)%>%summarise(max(owylis_vce_Range)))[[2]]
dat8$varname<-rep("owylis_vce_Range",nrow(dat8))

#mou_opkv_Range
summary(telnew$mou_opkv_Range)
telnew%>%mutate(dec=ntile(mou_opkv_Range,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat9
dat9$N<-unclass(telnew%>%mutate(dec=ntile(mou_opkv_Range,n=10))%>%count(dec)%>%unname())[[2]]
dat9$churn_perc<-dat9$n/dat9$N
dat9$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(mou_opkv_Range,n=10))%>%group_by(dec)%>%summarise(min(mou_opkv_Range)))[[2]]
dat9$LessThan<-unclass(telnew%>%mutate(dec=ntile(mou_opkv_Range,n=10))%>%group_by(dec)%>%summarise(max(mou_opkv_Range)))[[2]]
dat9$varname<-rep("mou_opkv_Range",nrow(dat9))

#months
summary(telnew$months)
telnew%>%mutate(dec=ntile(months,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat10
datlO$N<-unclass(telnew%>%mutate(dec=ntile(months,n=10))%>%count(dec)%>%unname())[[2]]
datl0$churn_perc<-datl0$n/datl0$N
datlO$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(months,n=10))%>%group_by(dec)%>%summarise(min(months)))[[2]]
datlO$LessThanâ€¹-unclass(telnew%>%mutate(dec=ntile(months,n=10))%>%group_by(dec)%>%summarise(max(months)))[[2]]
datl0$varnamer-rep("months",nrow(dat10))

#totcalls
summary(telnew$totcalls)
telnew%>%mutate(dec=ntile(totcalls,n=10))%>%count(churn,dec)%>%filter(churn==1)->datll
datl1$N<-unclass(telnew%>%mutate(dec=ntile(totcalls,n=10))%>%count(dec)%>%unname())[[2]]
datll$churn_perc<-datll$n/datl1$N
datll$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(totcalls,n=10))%>%group_by(dec)%>%summarise(min(totcalls)))[[2]]
datl1$LessThan<-unclass(telnew%>%mutate(dec=ntile(totcalls,n=10))%>%group_by(dec)%>%summarise(max(totcalls)))[[2]]
datll$varname<-rep("totcalls",nrow(dat11))


#eqpdays
summary(telnew$eqpdays)

#Missing value treatment - As there is one missing observation it is removed
missingobs<-which(is.na(telnew$eqpdays))
telnew<-telnew[-missingobs,]

#eqpdays-dat12
telnew%>%mutate(dec=ntile(eqpdays,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat12
datl2$N<-unclass(telnew%>%mutate(dec=ntile(eqpdays,n=10))%>%count(dec)%>%unname())[[2]]
datl2$churn_perc<-dat12$n/dat12$N
datl2$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(eqpdays,n=10))%>%group_by(dec)%>%summarise(min(eqpdays)))[[2]]
datl2$Lessihan<-unclass(telnew%>%mutate(dec=ntile(eqpdays,n=10))%>%group_by(dec)%>%summarise(max(eqpdays)))[[2]]
datl2$varname<-rep("eqpdays",nrow(dat12))

#custcare_mean is getting less than 4 decile so omitted
summary(telnew$custcare_mean)
telnew%>%mutate(dec=ntile(custcare_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat13
datl3$varname<-rep("custcare_mean",nrow(dat13))

#callwait_mean
summary(telnew$callwait_mean)
telneW%>%mutate(dec=ntile(callwait_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat14
datl4$N<-unclass(telnew%>%mutate(dec=ntile(callwait_mean,n=4))%>%count(dec)%>%unname())[[2]]
datl4$churn_perc<-dat14$n/dat14$N
datl4$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(callwait_mean,n=4))%>%group_by(dec)%>%summarise(min(callwait_mean)))[[2]]
datl4$LessThan<-unclass(telnew%>%mutate(dec=ntile(callwait_mean,n=4))%>%group_by(dec)%>%summarise(max(callwait_mean)))[[2]]
datl4$varname<-rep("callwait_mean",nrow(dat14))

#iwylis_vce_mean
summary(telnew$iwylis_vce_mean)
telnew%>%mutate(dec=ntile(iwylis_vce_mean,n=6))%>%count(churn,dec)%>%filter(churn==1)->dat15
datl5$N<-unclass(telnew%>%mutate(dec=ntile(iwylis_vce_mean,n=6))%>%count(dec)%>%unname())[[2]]
datl5$churn_perc<-dat15$n/dat15$N
datl5$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(iwylis_vce_mean,n=6))%>%group_by(dec)%>%summarise(min(iwylis_vce_mean)))[(2]]
datl5$LessThan<-unclass(telnew%>%mutate(dec=ntile(iwylis_vce_mean,n=6))%>%group_by(dec)%>%summarise(max(iwylis_vce_mean)))[[2]]
datl5$varname<-rep("iwylis_vce_mean",nrow(dat15))

#callwait_Range is getting less than 4 decile so omitted
summary(telnew$callwait_Range)
telnew%>%mutate(dec=ntile(callwait_Range,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat16
datl6$varname<-rep("callwait_Range",nrow(dat16))

#ccrndmou_Range is getting less than 4 decile so omitted
summary(telnew$ccrndmou_Range)
telnew%>%mutate(dec=ntile(ccrndmou_Range,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat17
datl7$varname<-rep("ccrndmou_Range",nrow(dat17))

#adjqty
summary(telnew$adjqty)
telnew%>%mutate(dec=ntile(adjqty,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat18
datl8$N<-unclass(telnew%>%mutate(dec=ntile(adjqty,n=10))%>%count(dec)%>%unname())[[2]]
datl8$churn_perc<-dat18$n/dat18$N
datl8$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(adjqty,n=10))%>%group_by(dec)%>%summarise(min(adjqty)))[[2]]
datl8$LessThan<-unclass(telnew%>%mutate(dec=ntile(adjqty,n=10))%>%group_by(dec)%>%summarise(max(adjqty)))[[2]]
datl8$varname<-rep("adjqty",nrow(dat18))

#ovrrev_mean
summary(telnew$ovrrev_mean)
telnew%>%mutate(dec=ntile(ovrrev_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat19
datl9$N<-unclass(telnew%>%mutate(dec=ntile(ovrrev_mean,n=4))%>%count(dec)%>%unname())[[2]]
datl9$churn_perc<-dat19$n/dat19$N
datl9$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(ovrrev_mean,n=4))%>%group_by(dec)%>%summarise(min(ovrrev_mean)))[[2]]
datl9$LessThan<-unclass(telnew%>%mutate(dec=ntile(ovrrev_mean,n=4))%>%group_by(dec)%>%summarise(max(ovrrev_mean)))[[2]]
datl9$varname<-rep("ovrrev_mean",nrow(dat19))

#rev_mean
summary(telnew$rev_mean)
telnew%>%mutate(dec=ntile(rev_mean,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat20
dat2O$N<-unclass(telnew%>%mutate(dec=ntile(rev_mean,n=10))%>%count(dec)%>%unname())[[2]]
dat20$churn_perc<-dat20$n/dat20$N
dat2O$Greaterihan<-unclass(telnew%>%mutate(dec=ntile(rev_mean,n=10))%>%group_by(dec)%>%summarise(min(rev_mean)))[[2]]
dat2O$Lessihan<-unclass(telnew%>%mutate(dec=ntile(rev_mean,n=10))%>%group_by(dec)%>%summarise(max(rev_mean)))[[2]]
dat20$varname<-rep("rev_mean",nrow(dat20))

#ovrmou_mean
summary(telnew$ovrmou_mean)
telnew%>%mutate(dec=ntile(ovrmou_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat21
dat21$N<-unclass(telnew%>%mutate(dec=ntile(ovrmou_mean,n=4))%>%count(dec)%>%unname())[[2]]
dat21$churn_perc<-dat21$n/dat21$N
dat21$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(ovrmou_mean,n=4))%>%group_by(dec)%>%summarise(min(ovrmou_mean)))[[2]]
dat21$LessThan<-unclass(telnew%>%mutate(dec=ntile(ovrmou_mean,n=4))%>%group_by(dec)%>%summarise(max(ovrmou_mean)))[[2]]
dat21$varname<-rep("ovrmou_mean",nrow(dat21))

#comp_vce_mean
summary(telnew$comp_vce_mean)
telnew%>%mutate(dec=ntile(comp_vce_mean,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat22
dat22$N<-unclass(telnew%>%mutate(dec=ntile(comp_vce_mean,n=10))%>%count(dec)%>%unname())[[2]]
dat22$churn_perc<-dat22$n/dat22$N
dat22$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(comp_vce_mean,n=10))%>%group_by(dec)%>%summarise(min(comp_vce_mean)))[[2]]
dat22$LessThan<-unclass(telnew%>%mutate(dec=ntile(comp_vce_mean,n=10))%>%group_by(dec)%>%summarise(max(comp_vce_mean)))[[2]]
dat22$varname<-rep("comp_vce_mean",nrow(dat22))

#plcd_vce_mean
summary(telnew$plcd_vce_mean)
telnew%>%mutate(dec=ntile(plcd_vce_mean,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat23
dat23$N<-unclass(telnew%>%mutate(dec=ntile(plcd_vce_mean,n=10))%>%count(dec)%>%unname())[[2]]
dat23$churn_perc<-dat23$n/dat23$N
dat23$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(plcd_vce_mean,n=10))%>%group_by(dec)%>%summarise(min(plcd_vce_mean)))[[2]]
dat23$LessThan<-unclass(telnew%>%mutate(dec=ntile(plcd_vce_mean,n=10))%>%group_by(dec)%>%summarise(max(plcd_vce_mean)))[[2]]
dat23$varname<-rep("plcd_vce_mean",nrow(dat23))

#avg3mou
summary(telnew$avg3mou)
telnew%>%mutate(dec=ntile(avg3mou,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat24
dat24$N<-unclass(telnew%>%mutate(dec=ntile(avg3mou,n=10))%>%count(dec)%>%unname())[[2]]
dat24$churn_perc<-dat24$n/dat24$N
dat24$GreaterThan<-unclass(telneva>%mutate(dec=ntile(avg3mou,n=10))%>%group_by(dec)%>%summarise(min(avg3mou)))[[2]]
dat24$LessThan<-unclass(telnew%>%mutate(dec=ntile(avg3mou,n=10))%>%group_by(dec)%>%summarise(max(avg3mou)))[[2]]
dat24$varname<-rep("avg3mou",nrow(dat24))

#avgmou
summary(telnew$avgmou)
telnew%>%mutate(dec=ntile(avgmou,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat25
dat25$N<-unclass(telnew%>%mutate(dec=ntile(avgmou,n=10))%>%count(dec)%>%unname())[[2]]
dat25$churn_perc<-dat25$n/dat25$N
dat25$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(avgmou,n=10))%>%group_by(dec)%>%summarise(min(avgmou)))[[2]]
dat25$LessThan<-unclass(telnew%>%mutate(dec=ntile(avgmou,n=10))%>%group_by(dec)%>%summarise(max(avgmou)))[[2]]
dat25$varname<-rep("avgmou",nrow(dat25))

#avg3qty
summary(telnew$avg3qty)
telnew%>%mutate(dec=ntile(avg3qty,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat26
dat26$N<-unclass(telnew%>%mutate(dec=ntile(avg3qty,n=10))%>%count(dec)%>%unname())[[2]]
dat26$churn_perc<-dat26$n/dat26$N
dat26$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(avg3qty,n=10))%>%group_by(dec)%>%summarise(min(avg3qty)))[[2]]
dat26$LessThan<-unclass(telnew%>%mutate(dec=ntile(avg3qty,n=10))%>%group_by(dec)%>%summarise(max(avg3qty)))[[2]]
dat26$varname<-rep("avg3qty",nrow(dat26))

#avgqty
summary(telnew$avgqty)
telnew%>%mutate(dec=ntile(avgqty,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat27
dat27$N<-unclass(telnew%>%mutate(dec=ntile(avgqty,n=10))%>%count(dec)%>%unname())[[2]]
dat27$churn_perc<-dat27$n/dat27$N
dat27$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(avgqty,n=10))%>%group_by(dec)%>%summarise(min(avgqty)))[[2]]
dat27$LessThan<-unclass(telnew%>%mutate(dec=ntile(avgqty,n=10))%>%group_by(dec)%>%summarise(max(avgqty)))[[2]]
dat27$varname<-rep("avgqty",nrow(dat27))

#avg6mou
summary(telnew$avg6mou)
telnew%>%mutate(dec=ntile(avg6mou,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat28
dat28$N<-unclass(telnew%>%mutate(dec=ntile(avg6mou,n=10))%>%count(dec)%>%unname())[[2]]
dat28$churn_perc<-dat28$n/dat28$N
dat28$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(avg6mou,n=10))%>%group_by(dec)%>%summarise(min(avg6mou)))[[2]]
dat28$LessThan<-unclass(telnew%>%mutate(dec=ntile(avg6mou,n=10))%>%group_by(dec)%>%summarise(max(avg6mou)))[[2]]
dat28$varname<-rep("avg6mou",nrow(dat28))

#avg6qty
summary(telnew$avg6qty)
telnew%>%mutate(dec=ntile(avg6qty,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat29
dat29$N<-unclass(telnew%>%mutate(dec=ntile(avg6qty,n=10))%>%count(dec)%>%unname())[[2]]
dat29$churn_perc<-dat29$n/dat29$N
dat29$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(avg6qty,n=10))%>%group_by(dec)%>%summarise(min(avg6qty)))[[2]]
dat29$LessThan<-unclass(telnew%>%mutate(dec=ntile(avg6qty,n=10))%>%group_by(dec)%>%summarise(max(avg6qty)))[[2]]
dat29$varname<-rep("avg6qty",nrow(dat29))

#agel as factor variable
summary(telnew$agel)
telnew%>%mutate(dec=ntile(agel,n=6))%>%count(churn,dec)%>%filter(churn==1)->dat30
dat3O$N<-unclass(telnew%>%mutate(dec=ntile(agel,n=6))%>%count(dec)%>%unname())[[2]]
dat30$churn_perc<-dat30$n/dat30$N
dat3O$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(agel,n=6))%>%group_by(dec)%>%summarise(min(agel)))[[2]]
dat3O$LessThan<-unclass(telnew%>%mutate(dec=ntile(agel,n=6))%>%group_by(dec)%>%summarise(max(agel)))[[2]]
dat30$varname<-rep("agel",nrow(dat30))

#age2 is getting less than 4 decile so used as factor variable
summary(telnew$age2)
telnew%>%mutate(dec=ntile(age2,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat31
dat31$varname<-rep("age2",nrow(dat31))

#models getting less than 4 decile so used as factor variable
summary(telnew$models)
telnew%>%mutate(dec=ntile(models,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat32
dat32$varname<-rep("models",nrow(dat32))

#hnd_price - as Factor
summary(telnew$hnd_price)
telnew%>%mutate(dec=ntile(hnd_price,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat33
dat33$N<-unclass(telnew%>%mutate(dec=ntile(hnd_price,n=10))%>%count(dec)%>%unname())[[2]]
dat33$churn_perc<-dat33$n/dat33$N
dat33$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(hnd_price,n=10))%>%group_by(dec)%>%summarise(min(hnd_price)))[[2]]
dat33$LessThan<-unclass(telnew%>%mutate(dec=ntile(hnd_price,n=10))%>%group_by(dec)%>%summarise(max(hnd_price)))[[2]]
dat33$varname<-rep("hnd_price",nrow(dat33))

#actvsubs as factor variable
summary(telnew$actvsubs)
telnew%>%mutate(dec=ntile(actvsubs,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat34
dat34$varname<-rep("actvsubs",nrow(dat34))

#uniqsubs as factor variable
summary(telnew$uniqsubs)
telnew%>%mutate(dec=ntile(uniqsubs,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat35
dat35$varname<-rep("uniqsubs",nrow(dat35))

#forgntvl as factor variable
summary(telnew$forgntv1)
telnew%>%mutate(dec=ntile(forgntvl,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat36
dat36$varname<-rep("forgntv1",nrow(dat36))

#opk_dat_mean as factor variable
summary(telnew$opk_dat_Mean)
telnew%>%mutate(dec=ntile(opk_dat_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat37
dat37$varname<-rep("opk_dat_mean",nrow(dat37))

#mtrcycle as factor variable
summary(telnew$mtrcycle)
telnew%>%mutate(dec=ntile(mtrcycle,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat38
dat38$varname<-rep("mtrcycle",nrow(dat38))

#truck as factor variable
summary(telnew$truck)
telnew%>%mutate(dec=ntile(truck,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat39
dat39$varname<-rep("truck",nrow(dat39))

#roam_mean is getting less than 4 decile so omit
summary(telnew$roam_Mean)
telnew%>%mutate(dec=ntile(roam_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat40
dat40$varname<-rep("roam_mean",nrow(dat40))

#recv_sms_mean is getting less than 4 decile so omit
summary(telnew$recv_sms_mean)
telnew%>%mutate(dec=ntile(recv_sms_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat41
dat41$varname<-rep("recv_sms_mean",nrow(dat41))

#mou_pead_mean is getting less than 4 decile so omit
summary(telnew$mou_pead_mean)
telnew%>%mutate(dec=ntile(mou_pead_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat42
dat42$varname<-rep("mou_pead_mean",nrow(dat42))

#da_mean
summary(telnew$da_Mean)
telnew%>%mutate(dec=ntile(da_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat43
dat43$N<-unclass(telnew%>%mutate(dec=ntile(da_mean,n=4))%>%count(dec)%>%unname())[[2]]
dat43$churn_perc<-dat43$n/dat43$N
dat43$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(da_mean,n=4))%>%group_by(dec)%>%summarise(min(da_mean)))[(2]]
dat43$LessThan<-unclass(telnew%>%mutate(dec=ntile(da_mean,n=4))%>%group_by(dec)%>%summarise(max(da_mean)))[(2]]
dat43$varname<-rep("da_mean",nrow(dat43))

#da_Range
summary(telnew$da_Range)
telnew%>%Mutate(dec=ntile(da_Range,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat44
dat44$N<-unclass(telnew%>%Mutate(dec=ntile(da_Range,n=4))%>%count(dec)%>%unname())[[2]]
dat44$churn_perc<-dat44$n/dat44$N
dat44$GreaterThan<-unclass(telnew%>%Mutate(dec=ntile(da_Range,n=4))%>%group_by(dec)%>%$ummarise(min(da_Range)))[[2]]
dat44$LessThan<-unclass(telnew%>%Mutate(dec=ntil(da_Range,n=4))%>%group_by(dec)%>%$ummarise(max(da_Range)))[[2]]
dat44$varname<-rep("da_Range",nrow(dat44))

#datovr_mean is getting less than 4 decile so omit
summary(telnew$datovr_mean)
telnew%>%Mutate(dec=ntile(datovr_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat45
dat45$varname<-rep("datovr_mean",nrow(dat45))

#datovr_Range is getting less than 4 decile so omit
summary(telnew$datovr_Range)
telnew%>%Mutate(dec=ntile(datovr_Range,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat46
dat46$varname<-rep("datovr_Range",nrow(dat46))

#drop_dat_mean -is getting less than 4 decile so omit and most 0
summary(telnew$drop_dat_mean)
telnew%>%fflutate(dec=ntile(drop_dat_mean,n=4))%>%count(churn,dec)%>%filter(churn==1)->dat47
dat47$varname<-rep("drop_dat_mean",nrow(dat47))

#drop_vce_mean
summary(telnew$drop_vce_mean)
telnew%>%fflutate(dec=ntile(drop_vce_mean,n=10))%>%count(churn,dec)%>95filter(churn==1)->dat48
dat48$N<-unclass(telnew%>%Mutate(dec=ntile(drop_vce_mean,n=10))%>%count(dec)%>%unname())[[2]J
dat48$churn_perc<-dat48$n/dat48$N
dat48$GreaterThan<-unclass(telnew%>%Mutate(dec=ntile(drop_vce_mean,n=10))%>%group_by(dec)%>%$ummarise(min(drop_vce_mean)))[[2]J
dat48$LessThan<-unclass(telnew%>%Mutate(dec=ntile(drop_vce_mean,n=10))%>%group_by(dec)%>%$ummarise(max(drop_vce_mean)))[[2]J
dat48$varname<-rep("drop_vce_mean",nrow(dat48))

#adjmou
summary(telnew$adjmou)
telnew%>%mutate(dec=ntile(adjmou,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat49
dat49$N<-unclass(telnew%>%mutate(dec=ntile(adjmou,n=10))%>%count(dec)%>%unname())[[2]]
dat49$churn_perc<-dat49$n/dat49$N
dat49$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(adjmou,n=10))%>%group_by(dec)%>%summarise(min(adjmou)))[[2]]
dat49$LessThan<-unclass(telnew%>%mutate(dec=ntile(adjmou,n=10))%>%group_by(dec)%>%summarise(max(adjmou)))[[2]]
dat49$varname<-rep("adjmou",nrow(dat49))

#totrev
summary(telnew$totrev)
telnew%>%mutate(dec=ntile(totrev,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat50
dat5O$N<-unclass(telnew%>%mutate(dec=ntile(totrev,n=10))%>%count(dec)%>%unname())[[2]]
dat50$churn_perc<-dat50$n/dat50$N
dat5O$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(totrev,n=10))%>%group_by(dec)%>%summarise(min(totrev)))[[2]]
dat5O$LessThan<-unclass(telnew%>%mutate(dec=ntile(totrev,n=10))%>%group_by(dec)%>%summarise(max(totrev)))[[2]]
dat50$varname<-rep("totrev",nrow(dat50))

#adjrev
summary(telnew$adjrev)
telnew%>%mutate(dec=ntile(adjrev,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat51
dat51$N<-unclass(telnew%>%mutate(dec=ntile(adjrev,n=10))%>%count(dec)%>%unname())[[2]]
dat51$churn_perc<-dat51$n/dat51$N
dat51$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(adjrev,n=10))%>%group_by(dec)%>%summarise(min(adjrev)))[[2]]
dat51$LessThan<-unclass(telnew%>%mutate(dec=ntile(adjrev,n=10))%>%group_by(dec)%>%summarise(max(adjrev)))[[2]]
dat51$varname<-rep("adjrev",nrow(dat51))

#avgrev
summary(telnew$avgrev)
telnew%>%mutate(dec=ntile(avgrev,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat52
dat52$N<-unclass(telnew%>%mutate(dec=ntile(avgrev,n=10))%>%count(dec)%>%unname())[[2]]
dat52$churn_perc<-dat52$n/dat52$N
dat52$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(avgrev,n=10))%>%group_by(dec)%>%summarise(min(avgrev)))[[2]]
dat52$LessThan<-unclass(telnew%>%mutate(dec=ntile(avgrev,n=10))%>%group_by(dec)%>%summarise(max(avgrev)))[[2]]
dat52$varname<-rep("avgrev",nrow(dat52))

#comp_dat_mean and plcd_dat_mean - ommited - data tranformation
summary(telnew$comp_dat_mean)


#plcd_vce_mean and plcd_dat_mean - Data transformation - create Dummy variable
telnew$plcd_attempt_mean<-telnew$plcd_vce_mean+telnew$plcd_dat_mean
summary(telnew$plcd_attempt_mean)
telnew%>%mutate(dec=ntile(plcd_attempt_mean,n=10))%>%count(churn,dec)%>95filter(churn==1)->dat53
dat53$N<-unclass(telnew%>%mutate(dec=ntile(plcd_attempt_mean,n=10))%>%count(dec)%>%unname())[[2]]
dat53$churn_perc<-dat53$n/dat53$N
dat53$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(plcd_attempt_mean,n=10))%Agroup_by(dec)%>%summarise(min(plcd_attempt_mean)))[[2]]
dat53$LessThan<-unclass(telnew%>%mutate(dec=ntile(plcd_attempt_mean,n=10))%Agroup_by(dec)%>%summarise(max(plcd_attempt_mean)))[[2]]
dat53$varname<-rep("plcd_attempt_mean",nrow(dat53))

#comp_vce_mean and comp_dat_mean - Data transformation -create Dummy variable
telnew$complete_mean<-telnew$comp_vce_mean+telnew$comp_dat_mean
summary(telnew$complete_mean)
telnew%>%mutate(dec=ntile(complete_mean,n=10))%>%count(churn,dec)%>%filter(churn==1)->dat54
dat54$N<-unclass(telnew%>%mutate(dec=ntile(complete_mean,n=10))%>%count(dec)%>%unname())[[2]]
dat54$churn_perc<-dat54$n/dat54$N
dat54$GreaterThan<-unclass(telnew%>%mutate(dec=ntile(complete_mean,n=10))%Agroup_by(dec)%>%summarise(min(complete_mean)))[[2]]
dat54$LessThan<-unclass(telnew%Amutate(dec=ntile(complete_mean,n=10))%Agroup_by(dec)%>%summarise(max(complete_mean)))[[2]]
dat54$varname<-rep("complete_mean",nrow(dat54))

#Adding datl to dat$4
dat<-rbind(datl,dat2,dat3,dat4,dat5,dat6,dat7,dat8,dat9,dat10,dat11,
dat12,dat14,dat15,dat18,dat19,dat20,dat21,dat22,dat23,
dat24,dat25,dat26,dat27,dat28,dat29,dat30,dat33,dat43,
dat44,dat48,dat49,dat50,dat51,dat52,dat53,dat54)

#Exporting continous variables
write. csv(dat,"continous variables.csv",row.names=F)

#Removing insignificant variables for thp model that couldn't be deciled as they will
#become insignificant in the model
#Also omitting the transformed variables
#Transformed variables - comp_vce_mean,comp_dat_mean, plcd_vce_mean,plcd_dat_mean
names(telnew)
telnew-telnew[,-c(13,16,17,22,23,45,48,49,50,56,57,58,65,66)]
names(telnew)

#categorical variables

#Event rate for each level in the categorical variable

#Levels with less than 5% churn rate are ommited which are insignificant
#crclscod
summary(telnew$crclscod)
telnew%>%count(churn,levels=crclscod)%>%filter(churn==1)->dat55
dat55$N<-unclass(telnew%>%filter(crclscod%in%dat55$levels)%>%count(crclscod))[[2]]
dat55$churnperc<-dat55$n/dat55$N
dat55$var.Name<-rep("crclscod",nrow(dat55))

#asl_flag
summary(telnew$asl_flag)
telnew%>%count(churn,levels=asl_flag)%>%filter(churn==1)->dat56
dat56$N<-unclass(telnew%>%filter(asl_flag%in%dat56$levels)%>%count(asl_flag))[(2]]
dat56$churnperc<-dat56$n/dat56$N
dat56$var.Name<-rep("asl_flag",nrow(dat56))

#prizm_social_one
summary(telnew$prizm_social_one)
telnew%>%count(churn,levels=prizm_social_one)%>%filter(churn-1)->dat57
dat57$N<-unclass(telneW%>%filter(prizm_social_one%in%dat57$levels)%>%count(prizm_social_one))[(2]]
dat57$churnperc<-dat57$n/dat57$N
dat57$var.Name<-rep("prizm_social_one",nrow(dat57))

#area
summary(telnew$area)
telnew%>%count(churn,levels=area)%>%filter(churn==1)->dat58
dat58$N<-unclass(telnew%>%filter(area%in%dat58$levels)%>%count(area))[[2]]
dat58$churnperc<-dat58$n/dat58$N
dat58$var.Name<-rep("area",nrow(dat58))

#refurb_new
summary(telnew$refurb_new)
telnew%>%count(churn,levels=refurb_new)%>%filter(churn==1)->dat59
dat59$N<-unclass(telnew%>%filter(refurb_new%in%dat59$levels)%>%count(refurb_new))[[2]]
dat59$churnperc<-dat59$n/dat59$N
dat59$var.Name<-rep("refurb_new",nrow(dat59))

#hnd_webcap
summary(telnew$hnd_webcap)
telnew%>%count(churn,levels=hnd_webcap)%>%filter(churn==1)->dat60
dat6O$N<-unclass(telnew%>%filter(hnd_webcap%in%dat60$levels)%>%count(hnd_webcap))[[2]]
dat60$churnperc<-dat60$n/dat60$N
dat60$var.Name<-rep("hnd_webcap",nrow(dat60))

#marital
summary(telnew$marital)
telnew%>%count(churn,levels=marital)%>%filter(churn==1)->dat61
dat61$N<-unclass(telnew%>%filter(maritaWin%dat61$levels)%>%count(marital))[[2]]
dat61$churnperc<-dat61$n/dat61$N
dat61$var.Name<-rep("marital",nrow(dat61))

#ethnic
summary(telnew$ethnic)
telnew%>%count(churn,levels=ethnic)%>%filter(churn==1)->dat62
dat62$N<-unclass(telnew%>%filter(ethnic%in%dat62$levels)%>%count(ethnic))[[2]]
dat62$churnperc<-dat62$n/dat62$N
dat62$var.Name<-rep("ethnic",nrow(dat62))

#car_buy
summary(telnew$car_buy)
telnew%>%count(churn,levels=car_buy)%>%filter(churn==1)->dat63
dat63$N<-unclass(telnew%>%filter(car_buy%in%dat63$levels)%>%count(car_buy))[[2]]
dat63$churnperc<-dat63$n/dat63$N
dat63$var.Name<-rep("car_buy",nrow(dat63))

#csa - some levels with Less than 5% churn rate are omitted
summary(telnew$csa)
telnew%>%count(churn,levels=csa)%>%filter(churn==1)->dat64
dat64$N<-unclass(telnew%>%filter(csa%in%dat64$levels)%>%count(csa))[[2])
dat64$churnperc<-dat64$n/dat64$N
dat64$var.Name<-rep("csa",nrow(dat64))

#retdaysnew
summary(telnew$retdaysnew)
telnew$retdaysnew<-as.factor(telnew$retdaysnew)
telnew%>%count(churn,levels=retdaysnew)%>%filter(churn==1)->dat65
dat65$N<-unclass(telnew%>%filter(retdaysnew%in%dat65$levels)%>%count(retdaysnew))[[2]]
dat65$churnperc<-dat65$n/dat65$N
dat65$var.Name<-rep("retdaysnew",nrow(dat65))

#Using variables as factors for the below

#age2
summary(telnew$age2)
telnew%>%count(churn,levels=age2)%>%filter(churn==1)->dat66
dat66$N<-unclass(telnew%>%filter(age2%in%dat66$levels)%>%count(age2))[[2]]
dat66$churnperc<-dat66$n/dat66$N
dat66$var.Name<-rep("age2",nrow(dat66))

#models
summary(telnew$models)
telnew%>%count(churn,levels=models)%>%filter(churn==1)->dat67
dat67$N<-unclass(telnew%>%filter(models%in%dat67$levels)%>%count(models))[[2]]
dat67$churnperc<-dat67$n/dat67$N
dat67$var.Name<-rep("models",nrow(dat67))

#actvsubs
summary(telnew$actvsubs)
telnew%>%count(churn,levels=actvsubs)%>%filter(churn==1)->dat68
dat68$N<-unclass(telnew%>%filter(actvsubs%in%dat68$levels)1. count(actvsubs))[[2]]
dat68$churnperc<-dat68$n/dat68$N
dat68$var.Name<-rep("actvsubs",nrow(dat68))

#uniqsubs
summary(telnew$uniqsubs)
telnew%>%count(churn,levels=uniqsubs)%>%filter(churn==1)->dat69
dat69$N<-unclass(telnew%>%filter(uniqsubs%in%dat69$levels)%>%count(uniqsubs))[[2]]
dat69$churnperc<-dat69$n/dat69$N
dat69$var.Name<-rep("uniqsubs",nrow(dat69))

#forgntvl
summary(telnew$forgntvl)
telnew%>%count(churn,levels=forgntvl)%>%filter(churn==1)->dat70
dat7O$N<-unclass(telnew%>%filter(forgntvl%in%dat70$levels)%>%count(forgntv1))[[2]]
dat70$churnperc<-dat70$n/dat7O$N
dat70$var.Name<-rep("forgntv1",nrow(dat70))

#mtrcycle
summary(telnew$mtrcycle)
telnew%>%count(churn,levels=mtrcycle)%>%filter(churn==1)->dat71
dat71$N<-unclass(telnew%>%filter(mtrcycle%in%dat71$levels)%>%count(mtrcycle))[[2]]
dat71$churnperc<-dat71$n/dat71$N
dat71$var.Name<-rep("mtrcycle",nrow(dat71))

#truck
summary(telnew$truck)
telnew%>%count(churn,levels=truck)%>%filter(churn==1)->dat72
dat72$N<-unclass(telnew%>%filter(truck%in%dat72$levels)%>%count(truck))[[2])
dat72$churnperc<-dat72$n/dat72$N
dat72$var.Name<-rep("truck",nrow(dat72))

#hnd_price
summary(telnew$hnd_price)
telnew%>%count(churn,levels=hnd_price)%>%filter(churn==1)->dat73
dat73$N<-unclass(telnew%>%filter(hnd_price%in%dat73$levels)%>%count(hnd_price))[[2]] 682dat73$churnperc<-dat73$n/dat73$N
dat73$churnperc<-dat73$n/dat73$N
dat73$var.Name<-rep("hnd_price",nrow(dat73))


#Adding dat55 to dat73
datc1<-rbind(dat55,dat56,dat57,dat58,dat59,dat60,dat61,dat62,dat63,dat64,dat65)

datc2<-rbind(dat66,dat67,dat68,dat69,dat70,dat71,dat72,dat73)

#Exporting categorical vaOriable
write.csv(datcl,"Event Rate - categorical variable_ch.csv",row.names=F)
write.csv(datc2,"Event Rate - categorical variable_fa.csv",row.names=F)

#Removing variables with levels less than 5% churn rate
names(telnew)
telnew-telnew[,-c(25,44)]
names(telnew)

#Data Preparation

#outlier Treatment

#continuous variables
#boxplot method
names(telnewA
summary(telnew)
str(telnew)

#Pactor variables
str(telnew)
list<-names(telnew)
list

#Removing categorical variables
listr-list[-c(25:42,50,51)]
list

#outlier Plots
par(mfrow=c(3,11))
for(i in 1:length(list))
{
boxplot(telnew[,list[i]],main=list[i])
1
for(i in 1:length(list))
{
plot(telnew[,list[i]],main=list[i])
}

#outlier Treatment
for(i in 1:length(list))
{
x<-boxplot(telnew[,list[i]],main=list[i])
out<-x$out
index<-which(telnew[,list[i])%i n% x$out)
telnew[index,list[i]]c-mean(tel new[,list[i]],na.rmT)
rm(x)
rm(out)
}

#checking boxplot after outlier treatment
for(i in 1:length(list))
{
boxplot(telnewLlist[i]],main=list[i])
1
for(i in 1:length(list))
{
plot(telnewLlist[i]],main=list[i])
}

dev.off()


#missing value Treatment

summary(telnew)
names(telnew)

#Factor variables -

fteleting Missing values
indexix-which(is.na(telnew[,c(1:5)]))
tel
summary(telnew)

index2<-which(is.na(telnew$change_mou))
tel

index3<-which(is.na(telnew$area))
tel

index4<-which(is.na(telnew$marital))
telnew<-telnew[-index4A

Mean Imputation
telnew$avg6mou[is.na(telnew$avg6mou)]<-mean(telnew$avg6mou,na.rm = T)
telnew$avg6qty[is.na(telnew$avg6qty)]<-mean(telnew$avg6qty,na.rm = T)
telnew$hnd_price[is.na(telnew$hnd_price)]<-mean(telnew$hnd_price,na.rm = T)
summary(telnew)

wcreating separate category 'missing' for factor variables

#prizm_socia_one
telnew$prizm_social_one_1<-ifelse(is.na(telnew$prizm_social_one),"missing",as.factor(telnew$prizm_social_one))
str(telnew$prizm_social_one_1)
telnew$prizm_social_one_1<-as.factor(telnew$prizm_social_one_l
summary(telnew$prizm_social_one)
summary(telnew$prizm_social_one_1)
telnew$prizm_social_one_1<-factor(telnew$prizm_social_one_1,labels .c(-c-,-R-,-s-,-T-,-u-,-missing-))
summary(telnew$prizm_social_one_1)

names(telnew)
telnew<-telnew[,-26]
summary(telnew)

#hnd_webcap
telnew$hnd_webcap_1<-ifelse(is.na(telnew$hnd_webcap),"missing",as.factor(telnew$hnd_webcap))
str(telnew$hnd_webcap_1)
telnew$hnd_webcap_1<-as.factor(telnew$hnd_webcap_2)
summary(telnew$hnd_webcap)
summary(telnew$hnd_webcap_1)
telnew$hnd_webcap_1<-factor(telnew$hnd_webcap_1,labels =c("uNKw","wc","wcmB","missing"))
summary(telnew$hnd_webcap_1)


names(telnew)
telnew<-telnew[,-28]
summary(telnew)

#checking churn rate after imputation
table(tel$churn)/nrow(tel)
table(telnew$churn)/nrow(telnew)


#convert to factor and create dummy variables
str(telnew$agel)
telnew$agel_1<-ifelse(telnew$agel==0,"oefault",ifelse(telnew$agel<=30,"Young",ifelse(telnew$agel>30&telnew$agel<=55,"mid age","old")))818 str(telnew$age1_1)
str(telnew$age1_1)
summary(telnew$age1_1)
names(telnew)
telnewc-telnew[,-30]
summary(telnew)

str(telnew$age2)
telnew$age2_1<-ifelse(telnew$age2==0,"oefault",ifelse(telnew$age2<=30,"Young",ifelse(telnew$age2>30&telnew$age2<=55,"mid age","old")))826 str(telnew$age2_1)
str(telnew$age2_1)
summary(telnew$age2_1)
names(telnew)
telnew<-telnew[,-30]
summary(telnew)


str(telnew$models)
summary(telnew$models)
telnew$models<-as.factor(telnew$models)
summary(telnew$models)

str(telnew$hnd_price)
summary(telnew$hnd_price)
telnew$hnd_price<-as.factor(telnew$hnd_price)
summary(telnew$hnd_price)

str(telnew$actvsubs)
summary(telnew$actvsubs)
telnew$actvsubs<-as.factor(telnew$actvsubs)
summary(telnew$actvsubs)

str(telnew$uniqsubs)
summary(telnew$uniqsubs)
telnew$uniqsubs<-as.factor(telnew$uniqsubs)
summary(telnew$uniqsubs)

str(telnew$forgntvl)
summary(telnew$forgntvl)
telnew$forgntvl<-as.factor(telnew$forgntvl)
summary(telnew$forgntvl)

str(telnew$mtrcycle)
summary(telnew$mtrcycle)
telnew$mtrcycle<-as.factor(telnew$mtrcycle)
summary(telnew$mtrcycle)

str(telnew$truck)
summary(telnew$truck)
telnew$truck<-as.factor(telnew$truck)
summary(telnew$truckA

#-----------------------------------------------------------------
#Logistic Regression Model Building

#splitting into test and Training samples
set.seed(200)
index<-sample(nrow(telnew),0.70*nrow(telnew),replace=F)
train<-telnew[index,]
test<-telnew[-index,]

#checking churn Rate
table(train$churn)/nrow(train)
table(test$churn)/nrow(test)

names(telnew)

#Building Logistic Regression Model after excluding var "customer_ID"
mod<-91m(churnâ€”.,data=train[,-46],family="binomial")
summary(mod)

#Stepwise Regression Model
step(mod,direction = "both")

#creating Dummy variables for factor variables with significant levels891 summary(telnew$asl_flag)
summary(telnew$asl_flag)
train$asl_flag_V<-ifelse(train$asl_flag=="Y",1,0)
test$asl_flag_V<-ifelse(test$asl_flag=="Y",1,0)

summary(train$area)
train$area_Cal_North<-ifelse(train$area=="CALIFORNIA NORTH AREA",1,0)
test$area_Cal_North<-ifelse(test$area=="CALIFORNIA NORTH AREA",1,0)

train$area_texas<-ifelse(train$area=="CENTRAL/$OUTH TEXA$ AREA",1,0)
test$area_texas<-ifelse(test$area=="CENTRAL/$OUTH TEXA$ AREA",1,0)

train$area_nrthflrda<-ifelse(train$area=="NORTH FLORIDA AREA",1,0)
test$area_nrthflrda<-ifelse(test$area=="NORTH FLORIDA AREA",1,0)


train$area_nrthwst<-ifelse(train$area=="NoRTHwEsT/RocKY MOUNTAIN AREA",1,0)
test$area_nrthwst<-ifelse(test$area=="NoRTHwEsT/RocKY MOUNTAIN AREA",1,0)

train$area_southflrda<-ifelse(train$area=="souTH FLORIDA AREA",1,0)
test$area_southfirda<-ifelse(test$area=="souTH FLORIDA AREA",1,0)

train$area_southwst<-ifelse(train$area=="souTHwEsT AREA",1,0)
test$area_southwst<-ifelse(test$area=="souTHwEsT AREA",1,0)

train$area_tenese<-ifelse(train$area=="TENNEssEE AREA",1,0)
test$area_tenese<-ifelse(test$area=="TENNEssEE AREA",1,0)

summary(train$refurb_new)

train$refurb_R<-ifelse(train$refurb_new=="R",1,0)
test$refurb_R<-ifelse(test$refurb_new=="R",1,0)

summary(train$ethinic)
train$ethnic_c<-ifelse(train$ethnic=="c",1,0)
test$ethnic_c<-ifelse(test$ethnic=="c",1,0)

train$ethnic_N<-ifelse(train$ethnic=="N",1,0)
test$ethnic_N<-ifelse(test$ethnic=="N",1,0)

train$ethnic_o<-ifelse(train$ethnic=="o",1,0)
test$ethnic_o<-ifelse(test$ethnic=="o",1,0)

train$ethnic_s<-ifelse(train$ethnic=="5",1,0)
test$ethnic_s<-ifelse(test$ethnic=="5",1,0)

train$ethnic_u<-ifelse(train$ethnic=="u",1,0)
test$ethnic_u<-ifelse(test$ethnic=="u",1,0)

train$ethnic_Z<-ifelse(train$ethnic=="z",1,0)
test$ethnic_Z<-ifelse(test$ethnic=="z",1,0)

summary(train$hnd_price)
train$hnd_price_79.98<-ffelse(train$hnd_price=="79.98999023",1,0)
test$hnd_price_79.98<-ffelse(test$hnd_price=="79.98999023",1,0)

train$hnd_price_105.08<-ffelse(train$hnd_price=="105.083038078331",1,0)
test$hnd_price_105.08<-ffelse(test$hnd_price=="105.083038078331",1,0)

train$hnd_price_129.98<-ffelse(train$hnd_price=="129.9899902",1,0)
test$hnd_price_129.98<-ffelse(test$hnd_price=="129.9899902",1,0)

train$hnd_price_149.98<-ffelse(train$hnd_price=="149.9899902",1,0)
test$hnd_price_149.98<-ffelse(test$hnd_price=="149.9899902",1,0)

train$hnd_price_199.98<-ffelse(train$hnd_price=="199.9899902",1,0)
test$hnd_price_199.98<-ffelse(test$hnd_price="199.9899902",1,0)

train$hnd_price_249.98<-ffelse(train$hnd_price=="249.9899902",1,0)
test$hnd_price_249.98<-ffelse(test$hnd_price=="249.9899902",1,0)


summary(train$uniqsubs)
train$unq_2<-ifelse(train$uniqsubs=="2",1,0)
test$unq_2<-ifelse(test$uniqsubs=="2"11,0)

train$unq_3<-ifelse(train$uniqsubs=="3"11,0)
test$unq_3<-ifelse(test$uniqsubs=="3"11,0)

train$unq_4<-ifelse(train$uniqsubs=="4"11,0)
test$unq_4<-ifelse(test$uniqsubs=="4"11,0)

train$unq_5<-ifelse(train$uniqsubs=="5"11,0)
test$unq_5<-ifelse(test$uniqsubs=="5"11,0)

train$unq_6<-ifelse(train$uniqsubs=="6"11,0)
test$unq_6<-ifelse(test$uniqsubs=="6"11,0)

train$unci_7<-ifelse(train$uniqsubs=="7",1,0)
test$unci_7<-ifelse(test$uniqsubs=="7",1,0)

train$ung_9<-ifelse(train$uniqsubs=="9",1,0)
test$ung_9<-ifelse(test$uniqsubs=="9",1,0)


summary(train$truck)

summary(train$prizm_social_one_2)

train$przm_social_R<-ifelse(train$prizm_social_one_1=="R",1,0)990 test$przm_social_R<-ifelse(test$prizm_social_one_1=="R",1,0)
test$przm_social_R<-ifelse(test$prizm_social_one_1=="R",1,0)

train$przm_social_T<-ifelse(train$prizm_social_one_1=="T",1,0)993 test$przm_social_T<-ifelse(test$prizm_social_one_1=="T",1,0)
test$przm_social_T<-ifelse(test$prizm_social_one_1=="T",1,0)

summary(train$agel_1)

train$agel_mid_age<-ifelse(train$agel_1=="mid age",1,0)
test$agel_mid_age<-ifelse(test$agel_1=="mid age",1,0)

train$agel_old<-ifelse(train$agel_1=="old",1,0)
test$agel_old<-ifelse(test$agel_1=="old",1,0)

train$agel_Young<-ifelse(train$agel_1=="Young",1,0)
test$agel_Young<-ifelse(test$agel_1=="Young",1,0)


summary(train$age2_1)
train$age2_O1d<-ifelse(train$age2_1=="old",1,0)
test$age2_O1d<-ifelse(test$age2_1=="old",1,0)

#Rerunning model with significant variables

names(train)
mod1<-glm(churn moudlean + totmrc_mean + rev_Range + mou_Range + change_mou + drop_blkjiean + drop_vce_Range +
mou_opkv_Range+ months + eqpdays + iwylis_vce_mean + ovrrev_mean + avgmou + avg3qty + avgqty +
avg6mou + asl_flag_Y + area_cal_North + area_texas + area_nrthflrda + area_nrthwst + area_southflrda +
area_southwst + area_tenese + refurb_R + ethnic_c + ethnic_N + ethnic_o + ethnic_s + ethnic_u +
ethnics + hnd_price_79.98 + hnd_price_105.08 + hnd_price_129.98 + hnd_price_149.98 + hnd_price_199.98 +
hnd_price_249.98 + unq_2 + unq_3 + unq_4 + unq_5 + unq_6 + unq_7 + unq_9 + truck + adjmou + totrev +
retdaysnew + completejiean + przm_social_R + przm_social_T + ageljiid_age + agel_old + agel_Young + age2_01d,
data = train, family = "binomial")
summary(modl)

#Further Rerunning by removing insignificant variables

mod2<-glm(churn mouJlean + totmrcJlean + rev_Range + mou_Range + change_mou + drop_blk_mean + drop_vce_Range +
mou_opkv_Range+ months + eqpdays + iwylis_vce_mean + ovrrev_mean + avgmou + avg3qty + avgqty +
avg6mou + asl_flag_Y + area_cal_North + area_texas + area_nrthflrda + area_nrthwst + area_southflrda +
area_southwst + area_tenese + refurb_R + ethnic_c + ethnic_N + ethnic_o + ethnic_s + ethnic_u +
ethnic _z + hnd_price_79.98 + hnd_price_105.08 + hnd_price_129.98 + hnd_price_149.98 + hnd_price_199.98 +
hnd_price_249.98 + unq_2 + unq_3 + unq_4 + unq_7 + adjmou + totrev +
retdaysnew + complete_mean + przm_social_R + przm_social_T + agel_mid_age + agel_old + agel_Young + age2_01d,
data = train, family = "binomial")
summary(mod2)

#All the variables are significant and all the signs of beta coefficients are in line with Probability less than 5%
#Model can be finalised after checking multicollinearity.

#Model Diagnostics
#checking multicollinearity - one predictor variable can be predicted from others
library(car)

vif(mod2)

#variables - vif values should be less than 5 lets take vif cut off as 5
#mou_mean, avgmou, avg3qty, avg6mou variables have vif of >5, and they show multicollinearity and they are removed

#Rerunning model

mod3<-glm(churn totmrcd4ean + rev_Range + mou_Range + change_mou + drop_blk_mean + drop_vce_Range +
mou_opkv_Range+ months + eqpdays + iwylis_vce_mean + ovrrevd4ean + avgqty +
asl_flag_Y + area_cal_North + area_texas + area_nrthflrda + area_nrthwst + area_southflrda +
area_southwst + area_tenese + refurb_R + ethnic_c + ethnic_N + ethnic_o + ethnic_s + ethnic_u +
ethnic_z + hnd_price_79.98 + hnd_price_105.08 + hnd_price_129.98 + hnd_price_149.98 + hnd_price_199.98 +
hnd_price_249.98 + unq_2 + unq_3 + unq_4 + unq_7 + adjmou + totrev +
retdaysnew + completejiean + prznusocial_R + prznLsocial_T + ageljiid_age + agel_old + agel_Young + age2_Old,
data = train, family = "binomial")
summary(mod3)

vif(mod3)
#adjmou is becoming insignifcant. so remmoving mou_mean only

mod4<-glm(churn totmrcdlean + rev_Range + mou_Range + change_mou + drop_blk_mean + drop_vce_Range +
mou_opkv_Range+ months + eqpdays + iwylis_vce_mean + ovrrevd4ean + avgmou + avg3qty + avgqty +
avg6mou + asl_flag_Y + area_cal_North + area_texas + area_nrthflrda + area_nrthwst + area_southflrda +
area_southwst + area_tenese + refurb_R + ethnic_c + ethnic_N + ethnic_o + ethnic_s + ethnic_u +
ethnic_z + hnd_price_79.98 + hnd_price_105.08 + hnd_price_129.98 + hnd_price_149.98 + hnd_price_199.98 +
hnd_price_249.98 + unq_2 + unq_3 + unq_4 + unq_7 + adjmou + totrev +
retdaysnew + complete_mean + prznLsocial_R + prznLsocial_T + agel_mid_age + agel_old + agel_Young + age2_Old,
data = train, family = "binomial")
summary(mod4)

#checking multicollinearity
vif(mod4)

#avgmou and avg3qty have vif>5

#avgmou removed
mod5r-glm(churn totmrcd4ean + rev_Range + mou_Range + change_mou + drop_blkjiean + drop_vce_Range +
mou_opkv_Range+ months + eqpdays + iwylis_vce_mean + ovrrevd4ean + avg3qty + avgqty +
avg6mou + asl_flag_Y + area_cal_North + area_texas + area_nrthflrda + area_nrthwst + area_southflrda +
area_southwst + area_tenese + refurb_R + ethnic_c + ethnic_N + ethnic_o + ethnic_s + ethnic_u +
ethnic _z + hnd_price_79.98 + hnd_price_105.08 + hnd_price_129.98 + hnd_price_149.98 + hnd_price_199.98 +
hnd_price_249.98 + unq_2 + unq_3 + unq_4 + unq_7 + adjmou + totrev +
retdaysnew + completejiean + przm_social_R + prznLsocial_T + ageljiid_age + agel_old + agel_voung + age2_Old,
data = train, family = "binomial")
summary(mod5)

vif(mod5)

#avg3qty removed

mod6<-glm(churn totmrcdlean + rev_Range + mou_Range + change_mou + drop_blkjiean + drop_vce_Range +
mou_opkv_Range+ months + eqpdays + iwylis_vce_mean + ovrrevd4ean + avgqty +
avg6mou + asl_flag_v + area_cal_North + area_texas + area_nrthflrda + area_nrthwst + area_southflrda +
area_southwst + area_tenese + refurb_R + ethnic_c + ethnic_N + ethnic_o + ethnic_s + ethnic_u +
ethnic _z + hnd_price_79.98 + hnd_price_105.08 + hnd_price_129.98 + hnd_price_149.98 + hnd_price_199.98 +
hnd_price_249.98 + unq_2 + unq_3 + unq_4 + unq_7 + adjmou + totrev +
retdaysnew + complete_mean + przm_social_R + przmsocial_T + agel_mid_age + agel_old + agel_voung + age2_Old,
data = train, family = "binomial")
summary(mod6)
vif(mod6)

# All vif values are less than 5, there is no multicollinearity

head(sort(mod6$coefficients,decreasing = T),10)
summary(mod6)

#checking confidence Interval
#confint(mod6)

#Model Testing
#predicting the probability of customer churning - Probability that the customer is good customer or bad customer on the test data
predr-predict(mod6,type="response",newdata=test)
head(pred)

#Assuming cutoff probability as per churn rate
table(telnew$churn)/nrow(telnew)

#s<-seq(0.2,0.5,0.01)
#n<-1
#a<-as.factor(length(s))
#for (i in s)
#{
# print(i)
# test$resultr-ifelse(test$pred>i,1,0)
# a[n]r-confusionmatrix(test$result,test$churn, positive = "1")$overall[2]
# print(n)
# n=n+1
#1
#max(a)

#cut off value = 0.2380871
pred1<-ifelse(pred>=0.2380871,1,0)
table(pred1)

#Kappa matrix - TO find whether our model is decent one
library(irr)
kappa2(data.frame(test$churn,pred1))

#confusion Matrix - To find how many our model had predicted correctly
library(caret)
confusionmatrix(predl,test$churn,positive = "1")
table(test$churn)

#ROCR curve
#11brary(R0cR)
#pred2r-prediction(predl,test$churn)
#prefr-performance(pred2,"tpr","fpr")
#plot(pref,col="red")
#abline(0,1,1ty=8,col="grey")
#aucr-performance(pred2,"auc")
#auc
#aucr-unlist(slot(auc,"y.values"))
#auc


#Gains chart - is used to obtain which customers are to be targeted
library(gains)
gains(test$churn,predict(mod6,type="response",newdata=test),groups = 10)
#output says how many percent of customers are in the top groups of churn

test$prob<-predict(mod6,type="response",newdata=test)
quantile(test$prob,prob=c(0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.90,1))

#Top 20% lie between 0.3023953 and 0.9594446 probabilities
Targeted_CustomersID<-test[test$prob>0.3023953 &test$prob <=0.9594446 & test$churn =='1',"Customer_ID"]
Targeted_CustomersIDâ€¹-as.data.frame(Targeted_CustomersID)
nrow(Targeted)
head(Targeted_CustomersID)
write. csv(Targeted_CustomerslD,"Targeted_customers.csv",row. names = F)




#Q2b
quantile(tel$comp_dat_Mean,prob=c(0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.82,0.84,0.85,0.90,1))
quantile(tel$plcd_dat_Mean,prob=c(0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.82,0.84,0.85,0.90,1))

#Q5
pred2<-ffelse(pred<0.20,"Low_score",ifelse(pred>=0.20 & pred<0.30, "medium_score","High_score"))
table(pred2,test$churn)

str(test$totrev)
quantile(test$totrev,prob=c(0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.90,1))
Revenue_Levels<-ffelse(test$totrev<670.660,"Low_Revenue",ifelse(test$totrev>=670.660&test$totrev<1133.93,"Medium_Revenue","High_Revenue"))


table(Revenue_Levels)
table(pred2,Revenue_Levels)

# This table can be used to extract the levels of customers to be targeted
test$prob_levels<-pred2
test$Revenue_Levels<-Revenue_Levels

Targeted_Customersips<-test[test$prob_levels=="High_score" & test$Revenue_Levels="High_Revenue","customer_m"]
Targeted_Customersips<-as.data.frame(Targeted_Customersips)
nrow(Targeted_CustomersIps)

write.csv(Targeted_customersins,"High_Revenue_Target_customers.csv",row.names=F)
